#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <conio.h>
#include <unistd.h>
//6 fulleme -   0 boşluklar -  3 oyuncu   - 5duvarlar  -   9 elmas -   7muhafız/
// kullanici yeri v b
// aşağıdaki fonksiyon madenimizi bastırma fonksiyonu,elmas ve muhafızların görünmemesi için if konuldu içine
int fonk(int madenim[12][12])
{
	int g,h;
	for(g = 1; g < 11 ;g++ )
	{
		printf("\n");
		for (h = 1; h < 11; h++)
		{	
		    if(madenim[g][h]==9){
		    	printf("0 ");
			}
			else if(madenim[g][h]==7){
				printf("0 ");
			}
			else{
				printf("%d ",madenim[g][h]);
			}
			
		}
	}
}

int main() {
	int toplam = 0;
	int can = 3;
	int c;
	char w,a,s,d;
	hata:;
	hatali:;
	hatalii:;
	int e1,e2,m;
	// ex elmasımızın satırını(örneğin 1.elmasın satırı ex[0] de tutuluyor)-ey elmasımızın sütununu-em ise muhafızın elmasın neresinde olacağını tutuyor
	int ex[5];
	int ey[5];
	int em[5];
	int i,j,k;
	int maden[12][12];
	srand(time(NULL));
	int hata1 = 0;
	int hata2 = 0;
	int v=3;
	int b=5;
	//maden temeli oluşturmak için
	//5 sayısı madenimizin duvarı olacak, kullanıcının dışarıya çıkmamasını sağlayacak
	for(i=0;i<12;i++){
		for(j=0;j<12;j++){
			maden[i][j]=6;
			}
		}
	for(i=1;i < 11;i++){
		for(j=1;j<11;j++){
			maden[i][j]=0;
		}
	}
	for(i=0;i<12;i++){
		for(j=0;j<12;j++){
			if(maden[i][j] == 6){
				maden[i][j]=5;
			}
		}
	}
	maden[3][5]=3;
	
	

	//aşağıda randomlar atarak elmas ve muhafızı yerleştiriyoruz
	i=1;
	while(i != 0){
		geri:
		for(j=0;j < 5;j++){
		e1 =  ((rand()%10) + 1);
		e2 =  ((rand()%10) + 1);
		m =  ((rand()%8) + 1);
		ex[j]=e1;
		ey[j]=e2;
		em[j]=m;
		}
		if( ((ex[0]==ey[1]) && (ey[0]==ey[1])) || ((ex[0]==ex[2]) && (ey[0]==ey[2])) || ((ex[0]==ex[3]) && (ey[0]==ey[3])) || ((ex[0]==ex[4]) && (ey[0]==ey[4])) || ((ex[1]==ex[2]) && (ey[1]==ey[2])) || ((ex[1]==ex[3]) && (ey[1]==ey[3])) || ((ex[1]==ex[4]) && (ey[1]==ey[4])) || ((ex[2]==ex[3]) && (ey[2]==ey[3])) || ((ex[2]==ex[4]) && (ey[2]==ey[4])) || ((ex[3]==ex[4]) && (ey[3]==ey[4])) ){
			goto geri;
		}
		else{
			maden[(ex[0])][(ey[0])]=9;
			maden[(ex[1])][(ey[1])]=9;
			maden[(ex[2])][(ey[2])]=9;
			maden[(ex[3])][(ey[3])]=9;
			maden[(ex[4])][(ey[4])]=9;	
			for(k=0;k<5;k++){
				if(em[k]==1){
					maden[(ex[k])-1][(ey[k])-1]=7;
				}
				else if(em[k]==2){
					maden[(ex[k])-1][(ey[k])]=7;
				}
				else if(em[k]==3){
					maden[(ex[k])-1][(ey[k])+1]=7;
				}
				else if(em[k]==4){
					maden[(ex[k])][(ey[k])+1]=7;
				}
				else if(em[k]==5){
					maden[(ex[k])+1][(ey[k])+1]=7;
				}
				else if(em[k]==6){
					maden[(ex[k])+1][(ey[k])]=7;
				}
				else if(em[k]==7){
					maden[(ex[k])+1][(ey[k])-1]=7;
				}
				else{
					maden[(ex[k])][(ey[k])-1]=7;
				}
				
			}
		}
		
	i--;
	}
	//aşağıda  eğer muhafız elmas sayısının kaç olduğunu ve kullanıcı doğru yerdemi kontrol ediyor. elmas sayısı5 ve muhafız sayısı 5 olmalı
	for(i=1;i<11;i++){
		for(j=1;j<11;j++){
			if(maden[i][j]==7){
				hata1++;
			}
			if(maden[i][j]==9){
				hata2++;
			}
		}	
	}
	//eğer doğru atanmamışsa goto ile tekrar kodun en başına dönüyor
	if(hata1 != 5){
		goto hata;
	}
	if(hata2 != 5){
		goto hatali;
	}
	if(maden[3][5]!=3){
		goto hatalii;
	}
    fonk(maden); 
	
	
	//aşağıda her bir elmasın uzaklığını bastırıyoruz
	printf("\n");
	printf("\n");
	if((ex[0]-v) < 0){
		if(((ey[0])-b)< 0){
			printf("1.elmasa uzaklik: %d",( (v-(ex[0]))+(b-(ey[0])) ));
		}
		else{
			printf("1.elmasa uzaklik: %d",(  (v-(ex[0]))+((ey[0])-b)  ));
		}
	}
	else{
		if(((ey[0])-b)< 0){
			printf("1.elmasa uzaklik: %d",( ((ex[0])-v) + (b-(ey[0]))  ));
		}
		else{
			printf("1.elmasa uzaklik: %d",( ((ex[0])-v)  + ((ey[0])-b) ));
		}
	}
	
	
	printf("\n");
	if((ex[1]-v) < 0){
		if(((ey[1])-b)< 0){
			printf("2.elmasa uzaklik: %d",( (v-(ex[1]))+(b-(ey[1])) ));
		}
		else{
			printf("2.elmasa uzaklik: %d",(  (v-(ex[1]))+((ey[1])-b)  ));
		}
	}
	else{
		if(((ey[1])-b)< 0){
			printf("2.elmasa uzaklik: %d",( ((ex[1])-v) + (b-(ey[1]))  ));
		}
		else{
			printf("2.elmasa uzaklik: %d",( ((ex[1])-v)  + ((ey[1])-b) ));
		}
	}	
	
	printf("\n");
	if((ex[2]-v) < 0){
		if(((ey[2])-b)< 0){
			printf("3.elmasa uzaklik: %d",( (v-(ex[2]))+(b-(ey[2])) ));
		}
		else{
			printf("3.elmasa uzaklik: %d",(  (v-(ex[2]))+((ey[2])-b)  ));
		}
	}
	else{
		if(((ey[2])-b)< 0){
			printf("3.elmasa uzaklik: %d",( ((ex[2])-v) + (b-(ey[2]))  ));
		}
		else{
			printf("3.elmasa uzaklik: %d",( ((ex[2])-v)  + ((ey[2])-b) ));
		}
	}	
	
	printf("\n");
	if((ex[3]-v) < 0){
		if(((ey[3])-b)< 0){
			printf("4.elmasa uzaklik: %d",( (v-(ex[3]))+(b-(ey[3])) ));
		}
		else{
			printf("4.elmasa uzaklik: %d",(  (v-(ex[3]))+((ey[3])-b)  ));
		}
	}
	else{
		if(((ey[3])-b)< 0){
			printf("4.elmasa uzaklik: %d",( ((ex[3])-v) + (b-(ey[3]))  ));
		}
		else{
			printf("4.elmasa uzaklik: %d",( ((ex[3])-v)  + ((ey[3])-b) ));
		}
	}	
	
	printf("\n");
	if((ex[4]-v) < 0){
		if(((ey[4])-b)< 0){
			printf("5.elmasa uzaklik: %d",( (v-(ex[4]))+(b-(ey[4])) ));
		}
		else{
			printf("5.elmasa uzaklik: %d",(  (v-(ex[4]))+((ey[4])-b)  ));
		}
	}
	else{
		if(((ey[4])-b)< 0){
			printf("5.elmasa uzaklik: %d",( ((ex[4])-v) + (b-(ey[4]))  ));
		}
		else{
			printf("5.elmasa uzaklik: %d",( ((ex[4])-v)  + ((ey[4])-b) ));
		}
	}
	
	// aşağıda can ve toplam elmas sayısını bastırıyoruz
	printf("\n");
	printf("toplanan elmas: %d",toplam);
	printf("\n");
	printf("can: %d",can);	
	
	
	
	//aşağıda w,a,s,d ile yönlendirmeleri yapıyoruz
	//örneğin d sağa git demek, sağında duvar elmas boşluk ve muhafız olmasına göre 4 duruma ayrılır.her bir durum için if açılıyor
	//v b daima kullanıcımızın satır ve sütun sayısı olacak
		for(toplam,can;toplam !=5 && can!=0;toplam,can){

		c = getche();
		printf("\n");
		
		switch(c){
			case 'd':
				if(maden[v][b+1]==5){
					printf("buraya ilerleyemezsiniz\n");
					sleep(1);
				}
				else if(maden[v][b+1]==9){
					toplam++;
					maden[v][b]=0;
					maden[v][b+1]=3;
					printf("elmas topladiniz\n");
					sleep(1);	
					b++;	
				}
				else if(maden[v][b+1]==7){
					can--;
					printf("muhafiza yakalandiniz\n");
					sleep(1);
					maden[v][b]=0;
					v=3;
					b=5;
					maden[v][b]=3;
				}
				else{
					maden[v][b]=0;
					maden[v][b+1]=3;
					b++;
	  
				}
				system("cls");
				fonk(maden);
				break;
			
			
			case 'a':
				if(maden[v][b-1]==5){
					printf("buraya ilerleyemezsiniz\n");
					sleep(1);
				}
				else if(maden[v][b-1]==9){
					maden[v][b]=0;
					maden[v][b-1]=3;
					toplam++;
					printf("elmas topladiniz\n");
					sleep(1);
					b--;
				}
				else if(maden[v][b-1]==7){
					can--;
					maden[v][b]=0;
					v=3;
					b=5;
					maden[v][b]=3;
					printf("muhafiza yakalandiniz\n");
					sleep(1);
				}
				else{
					maden[v][b]=0;
					maden[v][b-1]=3;
					b--;
				}
				system("cls");
				fonk(maden);
				break;			
			
			
			case 'w':
				if(maden[v-1][b]==5){
					printf("buraya ilerleyemezsiniz\n");
					sleep(1);
				}
				else if(maden[v-1][b]==9){
					maden[v][b]=0;
					maden[v-1][b]=3;
					toplam++;
					v--;
					printf("elmas topladiniz\n");
					sleep(1);	
				}
				else if(maden[v-1][b]==7){
					can--;
					maden[v][b]=0;
					v=3;
					b=5;
					maden[v][b]=3;
					printf("muhafiza yakalandiniz\n");
					sleep(1);
				}
				else{
					maden[v][b]=0;
					maden[v-1][b]=3;
					v--;
				}
				system("cls");
				fonk(maden);
				break;						
			
			
			case 's':
				if(maden[v+1][b]==5){
					printf("buraya ilerleyemezsiniz\n");
					sleep(1);
				}
				else if(maden[v+1][b]==9){
					maden[v][b]=0;
					maden[v+1][b]=3;
					toplam++;
					v++;
					printf("elmas topladiniz\n");
					sleep(1);
				}
				else if(maden[v+1][b]==7){
					can--;
					maden[v][b]=0;
					v=3;
					b=5;
					maden[v][b]=3;
					printf("muhafiza yakalandiniz\n");
					sleep(1);
					
				}
				else{
					maden[v][b]=0;
					maden[v+1][b]=3;
					v++;
				}
				//system cls ekranı komple siler,fonk(maden) ise maden bastırma fonksiyonunuçağırır,sleep(1) ise o yazılacak şeyi silmeden önce  saniye ekranda tutmamızı sağlar
				system("cls");
				fonk(maden);
				break;	
									
		        default:
		        printf("bilinmeyen islem");	
		        break;						
		}
		
		printf("\n");
		//aşağıdaki if de döngüyü kırar
		if(can==0 || toplam==5){

			goto bitti;
		}
		//aşağıda yine elmas uzaklıklarını ekrana bastırıyor ama elması alınca tekrar elmasın konumunu ekrana bastırmaması için ekstra if ler kullandım
		if(maden[(ex[0])][(ey[0])]==9){
			
			printf("\n");
	        if((ex[0]-v) < 0){
		        if(((ey[0])-b)< 0){
			        printf("1.elmasa uzaklik: %d",( (v-(ex[0]))+(b-(ey[0])) ));
		        }
	        	else{
		        	printf("1.elmasa uzaklik: %d",(  (v-(ex[0]))+((ey[0])-b)  ));
	        	}
        	}
        	else{
        		if(((ey[0])-b)< 0){
		        	printf("1.elmasa uzaklik: %d",( ((ex[0])-v) + (b-(ey[0]))  ));
		        }
	        	else{
			printf("1.elmasa uzaklik: %d",( ((ex[0])-v)  + ((ey[0])-b) ));
		        } 
	            }
		}
		
		
		
		if(maden[(ex[1])][(ey[1])]==9){
        	printf("\n");
        	if((ex[1]-v) < 0){
        		if(((ey[1])-b)< 0){
        			printf("2.elmasa uzaklik: %d",( (v-(ex[1]))+(b-(ey[1])) ));
        		}
        		else{
        			printf("2.elmasa uzaklik: %d",(  (v-(ex[1]))+((ey[1])-b)  ));
        		}
        	}
        	else{
        		if(((ey[1])-b)< 0){
        			printf("2.elmasa uzaklik: %d",( ((ex[1])-v) + (b-(ey[1]))  ));
        		}
        		else{
    	    		printf("2.elmasa uzaklik: %d",( ((ex[1])-v)  + ((ey[1])-b) ));
    	    	}
        	}				
			
		}
		
		
		
		if(maden[(ex[2])][(ey[2])]==9){
        	printf("\n");
        	if((ex[2]-v) < 0){
        		if(((ey[2])-b)< 0){
          			printf("3.elmasa uzaklik: %d",( (v-(ex[2]))+(b-(ey[2])) ));
        		}
	        	else{
	        		printf("3.elmasa uzaklik: %d",(  (v-(ex[2]))+((ey[2])-b)  ));
	        	}
        	}
        	else{
	        	if(((ey[2])-b)< 0){
        			printf("3.elmasa uzaklik: %d",( ((ex[2])-v) + (b-(ey[2]))  ));
        		}
	        	else{
	        		printf("3.elmasa uzaklik: %d",( ((ex[2])-v)  + ((ey[2])-b) ));
	        	}
        	}				
			
		}
		
		
		
		if(maden[(ex[3])][(ey[3])]==9){
        	printf("\n");
        	if((ex[3]-v) < 0){
        		if(((ey[3])-b)< 0){
        			printf("4.elmasa uzaklik: %d",( (v-(ex[3]))+(b-(ey[3])) ));
        		}
        		else{
	        		printf("4.elmasa uzaklik: %d",(  (v-(ex[3]))+((ey[3])-b)  ));
        		}
        	}
        	else{
	        	if(((ey[3])-b)< 0){
		        	printf("4.elmasa uzaklik: %d",( ((ex[3])-v) + (b-(ey[3]))  ));
	        	}
	        	else{
		        	printf("4.elmasa uzaklik: %d",( ((ex[3])-v)  + ((ey[3])-b) ));
	        	}
        	}				
			
		}
		
		
		
		if(maden[(ex[4])][(ey[4])]==9){
        	printf("\n");
        	if((ex[4]-v) < 0){
	        	if(((ey[4])-b)< 0){
	        		printf("5.elmasa uzaklik: %d",( (v-(ex[4]))+(b-(ey[4])) ));
	        	}
        		else{
        			printf("5.elmasa uzaklik: %d",(  (v-(ex[4]))+((ey[4])-b)  ));
	        	}
        	}
        	else{
	        	if(((ey[4])-b)< 0){
	        		printf("5.elmasa uzaklik: %d",( ((ex[4])-v) + (b-(ey[4]))  ));
	        	}
	        	else{
		        	printf("5.elmasa uzaklik: %d",( ((ex[4])-v)  + ((ey[4])-b) ));
	        	}
        	}				
			
		}
		//elmas sayısı ve can ı bastırıyor
		printf("\ntoplanan elmas: %d\n",toplam);
		printf("can: %d",can);






	
	}
	bitti:
		//aşağıda oyunu muhafıza yakalanarak mı yoksa elması toplayarakmı yakalandığına göre yazılar bastırıyor
	if(toplam==5){
		printf("tebrikler oyunu kazandiniz");
	}
	if(can==0){
		printf("oyunu kaybettiniz");
	}	
	
	
	return 0;
}
